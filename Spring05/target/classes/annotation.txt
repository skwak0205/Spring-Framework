Spring Annotation
- annotation은 java 1.5부터 지원한다.
- 스프링은 어노테이션을 이용하여 빈과 관련된 정보를 설정

Spring Annotation 설정
1. CommonAnnotationBeanPostProcessor 클래스를 설정파일에 bean 객체로 등록하여 annotation 적용
	<bean class="org.springframework.beans.factory.annotation.CommonAnnotationBeanPostProcessor" />

2. <context:annotation-config /> 태그를 이용
	@Autowired, @Required, @Resource, @PostConstructor, @PreDestroy 등의 annotation을 자동 처리해 주는 bean post processor
	
3. <context:component-scan base-package="" /> 태그를 이용
	@Component, @Controller, @Service, @Repository 등의 annotation을 자동 처리
	
4. <mvc:annotation-driven /> 태그를 이용
	@RequestMapping, @Valid, .... 등의 spring mvc component들을 자동 처리
	HandlerMapping, HandlerAdapter를 등록하여 @Controller에 요청 연결
	해당 태그가 없어도 <context:component-scan />이 있으면 mvc application 동작
	
* 4개의 stereotype annotation (component-scan에 의해 자동 등록)
@Component : stereotype annotation의 조상
@Controller : Spring MVC에서 컨트롤러로 인식
@Service : 역할 부여 없이 스캔 대상이 됨. 비즈니스 로직(biz)로 사용
@Repository : 일반적으로 dao에 사용, Exception을 DataAccessException으로 변환

1. @Component
패키지 : org.springframework.stereotype
버전 : spring 2.5
클래스에 선언하며 해당 클래스를 자동으로 bean 등록. bean의 이름은 해당 클래스명 (첫글자 소문자)
범위는 디폴트로 singleton이며 @Scope를 이용해 지정할 수 있다.

2. @Autowired
패키지 : org.springframework.beans.factory.annotation
버전 : spring 2.5
Autowired annotation은 spring에서 의존관계를 자동으로 설정할 때 사용.
이 어노테이션은 생성자, 필드, 메서드 세 곳에 적용 가능하며, 타입을 이용한 프로퍼티 자동 설정 기능을 제공
즉, 해당 타입의 빈 객체가 없거나 2개 이상일 경우 예외를 발생시킨다.
프로퍼티 설정 메서드 (setter) 형식이 아닌 일반 메서드에도 적용 가능.
프로퍼티 설정이 필수가 아닌 경우 @Autowired(required=false)로 선언한다. (default = true)
autowire 속성의 값을 byType으로 설정할 경우, 같은 타입의 빈이 2개 이상 존재하면 예외가 발생하는 데,
@Autowired도 같은 문제가 발생한다. 이때, @Qualifier를 사용하면 동일한 타입의 빈 중 특정 빈을 사용하도록 설정 가능.
ex)
	@Autowired
	@Qulifier("mytest")
	private Test test;

3. @Qualifier
패키지 : org.springframework.beans.factory.annotation
버전 : spring 2.5
@Autowired annotation이 byType 기반이기 때문에 2개 이상의 동일타입 빈 객체가 존재할 시, 특정 빈을 사용하도록 선언
@Qualifier("beanName")의 형태로 @Autowired와 함께 사용한다.

4. @Required
패키지 : org.springframework.beans.factory.annotation
버전 : spring 2.0
필수 프로퍼티임을 명시하는 것으로, 프로퍼티 설정 메서드(setter)에 붙이면 된다.
필수 프로퍼티를 설정하지 않을 경우, 빈 생성시 예외 발생.


5. @Repository
패키지 : org.springframework.stereotype
버전 : spring 2.0
dao에 사용되며 Exception을 DataAccessException으로 변환.

6. @Service
패키지 : org.springframework.stereotype
버전 : spring 2.0
@Service를 적용한 class는 비즈니스 로직(biz)로 취급.

7. @Resource
패키지 : javax.annotation.Resource
버전 : java 1.6 & JavaEE 5
어플리케이션에서 필요로 하는 자원을 자동 연결. name 속성에 자동으로 연결될 빈 객체의 이름을 입력.
ex)
	@Resource(name="testDao")   // byName -> byType











































